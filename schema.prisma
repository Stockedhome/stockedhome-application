generator client {
  provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Recipe {
    id             BigInt        @id @default(autoincrement())
    name           String
    createdAt      DateTime      @default(now())
    lastUpdatedAt  DateTime      @updatedAt
    ingredients    Ingredient[]
    instructions   String[]
    images         String[]
    author         User          @relation(fields: [authorId], references: [id])
    authorId       BigInt
    saveInstances  SavedRecipe[]
}

model SavedRecipe {
    id        BigInt      @id @default(autoincrement())
    savedAt   DateTime    @default(now())
    recipe    Recipe      @relation(fields: [recipeId], references: [id])
    recipeId  BigInt
    user      User?        @relation(fields: [userId], references: [id])
    userId    BigInt?
    household Household?   @relation(fields: [householdId], references: [id])
    householdId BigInt?
    nickname  String?
}

enum Merchant {
    AMAZON
}

model Ingredient {
    id       BigInt             @id @default(autoincrement())
    name     String
    listings MerchantListing[]
    recipes  Recipe[]
    images   String[]
}

model MerchantListing {
    id                 BigInt      @id @default(autoincrement())
    merchant           Merchant
    price              Float
    frontendUrl        String
    merchantProductId  String
    ingredient         Ingredient  @relation(fields: [ingredientId], references: [id])
    ingredientId       BigInt
}

model User {
    // Basic Data
    id              BigInt      @id @default(autoincrement())
    email           String      @unique
    passHash        String
    username        String
    createdAt       DateTime    @default(now())

    // Platform Data
    savedRecipes    SavedRecipe[]
    authoredRecipes Recipe[]
    households      Household[]

    // Auth
    publicKeys      String[]
    authRequests    NewKeypairRequest[]

    // Settings

}

model Household {
    id        BigInt      @id @default(autoincrement())
    createdAt DateTime    @default(now())
    name      String
    members   User[]
    recipes   SavedRecipe[]
}

model NewKeypairRequest {
    id        BigInt      @id @default(autoincrement())
    createdAt DateTime    @default(now())
    user      User        @relation(fields: [userId], references: [id])
    userId    BigInt
    sendingIP String
    userAgent String
    publicKey String
}
