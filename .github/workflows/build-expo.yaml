name: Build / Expo App

# Some direction & snippets taken from https://github.com/thomasread99/expo-workflows/

on:
    workflow_dispatch:
      inputs:
        platformJson:
          type: string
          description: 'Platforms to build for, defined as {"platform": ["ios", "android", "futurePhone(TM)"]} because Actions forgot what an array is'
          required: false
          #default: '{"platform": ["ios", "android"]}'
          default: '{"platform": ["android"]}'
        profile:
          type: string
          description: 'Build profile'
          required: false
          default: 'production'
        fail-fast:
          type: boolean
          description: 'Abort all platforms if one platform fails'
          required: false
    workflow_call:
      secrets:
        EXPO_TOKEN:
          description: 'Expo token for building the app'
          required: true
      inputs:
        platformJson:
          type: string
          description: 'Platforms to build for, defined as {"platform": ["ios", "android", "futurePhone(TM)"]} because Actions forgot what an array is'
          required: true
          #default: '{"platform": ["ios", "android"]}'
          default: '{"platform": ["android"]}'
        profile:
          type: string
          description: 'Build profile'
          required: true
          default: 'production'
        fail-fast:
          type: boolean
          description: 'Abort all platforms if one platform fails'
          required: true

jobs:
  build:
    strategy:
      matrix: ${{ fromJson( inputs.platformJson ) }}
      fail-fast: ${{ inputs.fail-fast }}
    name: Build App (${{ matrix.platform }})
    runs-on: ${{ matrix.platform == 'ios' && 'macos-latest' || 'ubuntu-latest' }}
    steps:
        - name: Terminate Job if Mac
          if: matrix.platform == 'ios'
          run: |
            echo "# Invalid Parameter" >> $env:GITHUB_STEP_SUMMARY
            echo "iOS is not supported yet." >> $env:GITHUB_STEP_SUMMARY
            exit 1
          shell: pwsh

        - run: echo ${{inputs.platformJson}}

        # ============================
        #        Project Setup
        # ============================

        - name: Clone Repo
          uses: actions/checkout@v4
          with:
            submodules: 'recursive'


        - name: Set Up PNPM
          uses: pnpm/action-setup@v4


        - name: Load Example ENV File
          uses: duskmoon314/action-load-env@v1
          id: load-env
          with:
            files: |
              .env.example


        - name: Set Up Node.js 21
          uses: actions/setup-node@v4
          with:
            node-version: 21
            cache: 'pnpm'


        # Tried caching Docker images, but doing so maed it slightly slower---not faster.
        # And when the images update, it tacks another minute onto the end of the job.


        - name: Install Dependencies & Run Codegen
          run: pnpm install --frozen-lockfile
          shell: pwsh
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


        # =============================
        #    Workflow-Specific Stuff
        # =============================


        - name: Setup EAS
          uses: expo/expo-github-action@v8
          with:
            eas-version: latest
            token: ${{ secrets.EXPO_TOKEN }}
            packager: pnpm

        - name: "DEBUG: `eas whoami`"
          if: runner.debug == '1'
          run: eas whoami
          shell: pwsh



        # ==== [ANDROID] Set up JDK & Android Studio ====

        - name: Set up JDK 17
          if: matrix.platform == 'android'
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: 'gradle'

        - name: Setup Android SDK
          if: matrix.platform == 'android'
          uses: android-actions/setup-android@v3


        # TODO: Set up Xcode for iOS (once I have a developer account)


        # ==== Build App ====

        - name: "DEBUG: Log Entire Directory Tree"
          if: runner.debug == '1'
          run: tree
          shell: pwsh

        - name: Build Expo App for ${{ matrix.platform }}
          run: 'pwsh -File ./scripts/build-expo-app.ps1 -androidAlwaysBuildAPK -platform ${{ matrix.platform }} -easProfile ${{ inputs.profile }} -buildMessage "GitHub Actions #${{ github.run_number }} ${{ matrix.platform }} for ${{ github.repository }} ${{ github.sha }}"'
          shell: pwsh
          env:
            EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


        # ==== Upload Artifact ====

        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
            name: "expo-app-${{ matrix.platform }}"
            path: ${{ env.EXPO_APP_PATH }}
            if-no-files-found: error

        # When building for Android, we build an AAB (Android App Bundle) for production builds--but those are
        # incredibly difficult to sideload and would make using Stockedhome's SAAS servers for authentication practically impossible.
        # So, we also build an APK for Android, which is significantly easier to sideload.
        - name: Upload Artifact (APK)
          uses: actions/upload-artifact@v4
          if: endsWith(env.EXPO_APP_PATH, '.aab') == true
          with:
            name: "expo-app-${{ matrix.platform }}-apk"
            path: ${{ env.EXPO_APP_PATH_APK }}
            if-no-files-found: error
